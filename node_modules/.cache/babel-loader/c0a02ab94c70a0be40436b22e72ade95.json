{"ast":null,"code":"export default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n  const stack = [0, ids.length - 1, 0];\n  const result = [];\n  let x, y;\n\n  while (stack.length) {\n    const axis = stack.pop();\n    const right = stack.pop();\n    const left = stack.pop();\n\n    if (right - left <= nodeSize) {\n      for (let i = left; i <= right; i++) {\n        x = coords[2 * i];\n        y = coords[2 * i + 1];\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n      }\n\n      continue;\n    }\n\n    const m = Math.floor((left + right) / 2);\n    x = coords[2 * m];\n    y = coords[2 * m + 1];\n    if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n    const nextAxis = (axis + 1) % 2;\n\n    if (axis === 0 ? minX <= x : minY <= y) {\n      stack.push(left);\n      stack.push(m - 1);\n      stack.push(nextAxis);\n    }\n\n    if (axis === 0 ? maxX >= x : maxY >= y) {\n      stack.push(m + 1);\n      stack.push(right);\n      stack.push(nextAxis);\n    }\n  }\n\n  return result;\n}","map":{"version":3,"sources":["/Users/kris/Desktop/UCIMCS/Spring2021/297P/temp/dirto-react/node_modules/kdbush/src/range.js"],"names":["range","ids","coords","minX","minY","maxX","maxY","nodeSize","stack","length","result","x","y","axis","pop","right","left","i","push","m","Math","floor","nextAxis"],"mappings":"AACA,eAAe,SAASA,KAAT,CAAeC,GAAf,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,IAA9C,EAAoDC,QAApD,EAA8D;AACzE,QAAMC,KAAK,GAAG,CAAC,CAAD,EAAIP,GAAG,CAACQ,MAAJ,GAAa,CAAjB,EAAoB,CAApB,CAAd;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,MAAIC,CAAJ,EAAOC,CAAP;;AAEA,SAAOJ,KAAK,CAACC,MAAb,EAAqB;AACjB,UAAMI,IAAI,GAAGL,KAAK,CAACM,GAAN,EAAb;AACA,UAAMC,KAAK,GAAGP,KAAK,CAACM,GAAN,EAAd;AACA,UAAME,IAAI,GAAGR,KAAK,CAACM,GAAN,EAAb;;AAEA,QAAIC,KAAK,GAAGC,IAAR,IAAgBT,QAApB,EAA8B;AAC1B,WAAK,IAAIU,CAAC,GAAGD,IAAb,EAAmBC,CAAC,IAAIF,KAAxB,EAA+BE,CAAC,EAAhC,EAAoC;AAChCN,QAAAA,CAAC,GAAGT,MAAM,CAAC,IAAIe,CAAL,CAAV;AACAL,QAAAA,CAAC,GAAGV,MAAM,CAAC,IAAIe,CAAJ,GAAQ,CAAT,CAAV;AACA,YAAIN,CAAC,IAAIR,IAAL,IAAaQ,CAAC,IAAIN,IAAlB,IAA0BO,CAAC,IAAIR,IAA/B,IAAuCQ,CAAC,IAAIN,IAAhD,EAAsDI,MAAM,CAACQ,IAAP,CAAYjB,GAAG,CAACgB,CAAD,CAAf;AACzD;;AACD;AACH;;AAED,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACL,IAAI,GAAGD,KAAR,IAAiB,CAA5B,CAAV;AAEAJ,IAAAA,CAAC,GAAGT,MAAM,CAAC,IAAIiB,CAAL,CAAV;AACAP,IAAAA,CAAC,GAAGV,MAAM,CAAC,IAAIiB,CAAJ,GAAQ,CAAT,CAAV;AAEA,QAAIR,CAAC,IAAIR,IAAL,IAAaQ,CAAC,IAAIN,IAAlB,IAA0BO,CAAC,IAAIR,IAA/B,IAAuCQ,CAAC,IAAIN,IAAhD,EAAsDI,MAAM,CAACQ,IAAP,CAAYjB,GAAG,CAACkB,CAAD,CAAf;AAEtD,UAAMG,QAAQ,GAAG,CAACT,IAAI,GAAG,CAAR,IAAa,CAA9B;;AAEA,QAAIA,IAAI,KAAK,CAAT,GAAaV,IAAI,IAAIQ,CAArB,GAAyBP,IAAI,IAAIQ,CAArC,EAAwC;AACpCJ,MAAAA,KAAK,CAACU,IAAN,CAAWF,IAAX;AACAR,MAAAA,KAAK,CAACU,IAAN,CAAWC,CAAC,GAAG,CAAf;AACAX,MAAAA,KAAK,CAACU,IAAN,CAAWI,QAAX;AACH;;AACD,QAAIT,IAAI,KAAK,CAAT,GAAaR,IAAI,IAAIM,CAArB,GAAyBL,IAAI,IAAIM,CAArC,EAAwC;AACpCJ,MAAAA,KAAK,CAACU,IAAN,CAAWC,CAAC,GAAG,CAAf;AACAX,MAAAA,KAAK,CAACU,IAAN,CAAWH,KAAX;AACAP,MAAAA,KAAK,CAACU,IAAN,CAAWI,QAAX;AACH;AACJ;;AAED,SAAOZ,MAAP;AACH","sourcesContent":["\nexport default function range(ids, coords, minX, minY, maxX, maxY, nodeSize) {\n    const stack = [0, ids.length - 1, 0];\n    const result = [];\n    let x, y;\n\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                x = coords[2 * i];\n                y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[i]);\n            }\n            continue;\n        }\n\n        const m = Math.floor((left + right) / 2);\n\n        x = coords[2 * m];\n        y = coords[2 * m + 1];\n\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY) result.push(ids[m]);\n\n        const nextAxis = (axis + 1) % 2;\n\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(nextAxis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(nextAxis);\n        }\n    }\n\n    return result;\n}\n"]},"metadata":{},"sourceType":"module"}